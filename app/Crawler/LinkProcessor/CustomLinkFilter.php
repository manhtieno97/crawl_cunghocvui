<?php
/**
 * Created by PhpStorm.
 * User: hocvt
 * Date: 5/31/17
 * Time: 11:27
 */

namespace App\Crawler\LinkProcessor;


class CustomLinkFilter extends LinkFilter {
	
	protected $type = "custom";
	
	protected $filters = [];
	
	public function setPatterns($patterns = []){
		$this->patterns = $patterns;
	}
	
	public function action($job, ...$users){
		echo "We have to apply " . $job . " to user : " . join(",", $users);
	}
	
	public function check( $link , $return_type = false) {
		if(!$return_type)
			return parent::check( $link , $return_type); // TODO: Change the autogenerated stub
		else{
			foreach ($this->filters as $filter){
				$check_info = $filter->check($link, true);
				if($check_info['check']){
					return $check_info;
				}
			}
			return false;
		}
	}
	
	public function merge(LinkFilter $lf){
		$lf_rules = $lf->getRules();
		foreach ([
			'patterns',
			'contains',
			'starts',
			'ends' ] as $rule){
			$this->$rule = array_merge($this->$rule, $lf_rules[$rule]);
		}
		$this->filters[$lf->getType()] = $lf;
		return $this;
	}
	
}